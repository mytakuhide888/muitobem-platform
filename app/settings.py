"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-aj98%v(fzaudoz%975*eg$$f29m=!lmwra082lg&5v_t3!^$bw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_adminlte3',
    'sns_core',
    'social',
    'webhooks',
    'social_core',
    'ig',
    'th',
    'social_webhooks',
    'social_scheduler',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

import os

if os.environ.get('USE_SQLITE') == '1':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'appdb',      # docker-compose.ymlのMYSQL_DATABASEと一致
            'USER': 'appuser',    # MYSQL_USER
            'PASSWORD': 'apppass',# MYSQL_PASSWORD
            'HOST': 'db',         # サービス名
            'PORT': '3306',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

#STATIC_URL = 'static/'
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# =========================================
# Threads API & Instagram 関連の設定
# =========================================
# あなたのInstagramプロフェッショナルアカウントのID
# (取得方法は後述します)
INSTAGRAM_PROFESSIONAL_ID = '17841475861395637' 

# アプリレビューで取得したアクセストークン
# (現時点ではテスト用のトークンでOK)
THREADS_ACCESS_TOKEN = 'YOUR_THREADS_ACCESS_TOKEN'

# --------------------------------------------------
# Credentials and webhook tokens for Instagram / Threads
# --------------------------------------------------
# These values are loaded from environment variables so that the
# application can run both locally and on production without code
# changes.  Tests use dummy defaults.
FACEBOOK_APP_ID = os.getenv('FACEBOOK_APP_ID', '')
FACEBOOK_APP_SECRET = os.getenv('FACEBOOK_APP_SECRET', '')
IG_APP_ID = os.getenv('IG_APP_ID', '')
IG_APP_SECRET = os.getenv('IG_APP_SECRET', '')
IG_REDIRECT_URI = os.getenv('IG_REDIRECT_URI', '')
VERIFY_TOKEN_IG = os.getenv('VERIFY_TOKEN_IG', 'test_token_ig')
VERIFY_TOKEN_TH = os.getenv('VERIFY_TOKEN_TH', 'test_token_th')
TH_APP_ID = os.getenv('TH_APP_ID', '')
TH_APP_SECRET = os.getenv('TH_APP_SECRET', '')
DEFAULT_API_VERSION = os.getenv('DEFAULT_API_VERSION', 'v23.0')
WORKER_INTERVAL_SEC = int(os.getenv('WORKER_INTERVAL_SEC', '5'))
